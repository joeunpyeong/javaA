1. static의 여부를 확인하기. (변수 , 메소드 등 전부 )
-> 멤버의 구분이 된다. (접근하는 방법이 다르다.)

2. 메소드라면 return 타입을 확인하기.(void의 여부 판단)
->void라면 한번 실행하고 결과가 필요없는경우
->void가 아니라면 실행 후 결과가 필요한 경우.

3. 접근제한자 확인하기 ( public , default , priavte )
->public 이라면 같은 Java프로젝트 내에서는 접근이 가능한데 멤버 구분에 의해서 접근이 제한될수있다.
-인스턴스 멤버는 인스턴스화 되어야지만 접근이가능(public)

->default 라면 같은 패키지 내부에서만 접근이 가능함.

-.private 같은 클래스 내부에서만 사용이 가능하고 제한이 많다.
=> getter & setter 메소드로 우회해서 사용을 한다.(왜?)

//==3번까지는 매번 새로운 무언가를 사용할때 판단 순서로 생각해보기 =========//

4.생성자 ( 커스텀해보기)
->생성자를 쓰는게 편할까? 안쓰는게 편할까? 